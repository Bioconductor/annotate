% \VignetteIndexEntry{Using the homology package}
% \VignetteDepends{annotate(>= 1.4.2, homology(>= 1.6.0}
% \VignetteKeywords{Annotation}
%\VignettePackage{annotate}

\documentclass{article}

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}

\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}

\usepackage{hyperref}

\usepackage[authoryear,round]{natbib}
\usepackage{times}

\begin{document}
\title{How to use the \Rpackage{homology} package}

\author{Jianhua Zhang \and Ben Wittner}
\date{}
\maketitle

\section*{Introduction}

The \Rpackage{homology} package was built based on a source
data file provided by HomoloGene
(\url{http://www.ncbi.nlm.nih.gov/HomoloGene/}).
This vignette illustrates how to use the \Rpackage{homology} package
to explore the homologous relationships among organisms. Two or more
organisms have homologous relationships if their genes share an
arbitrary threshold level of similarity determined by alignment of
matching bases.

This vignette demonstrates the usage of the \Rpackage{homology}
package by performing two tasks to introduce users to the
package, although the potential use of the package is well beyond the
scope of the tasks.

\section*{Contents of the package}

As other Bioconductor data packages, the \Rpackage{homology} package
contains environment objects in the \texttt{data} subdirectory that
will be loaded when the package is loaded. A full list of the
environment objects is shown below:

<<>>=
library("annotate")
library("homology")
homology()
@

Objects with the organism specified by the organism code (used by NCBI
for organism) following the \texttt{homology} portion of the name
contains all the HomoloGeneIDs for the organism. For example,
\Robject{homology9606} contains all the HomoloGeneIDs for
human. Organism codes and the corresponding scientific names of
organisms can be accessed using the \Robject{homologyORGCODE} and are
shown below:

<<>>=
homologyORGCODE
@

\Robject{homologyDATA} has HomoloGeneIDs as keys and lists of
\Rclass{homoData} objects for other organisms that have been
identified to have homology relationships as the corresponding
values. The list for a given HomologGene ID may have one or more
\Rclass{homoData} objects depending on whether homology relationships
have been identified in only one or more other organisms.

A \Rclass{homoData} object has slots for the name of the organism
(homoOrg), LocusLink ID (homoLL), HomologGeneID (homoHGID), GenBank
accession number (homoACC) of the best matching sequence, type of
similarity (homoType. B - reciprocal best best between three or more
organisms, b
- reciprocal best match between two organisms, and c - curated
homology relationship between two organisms), percent of identity
(homoPS) measured as the percentage of base pair alignment between the
matching sequences, and a url (homoURL) to the source if the
relationship is a curated orthology. The homoData objects with
homoType = B or b will not have any value for homoURL and objects with
homoType = c will not have any value for homoPS.

The \Robject{homologyLL2HGID} environment contains mappings between
LocusLink identifiers and HGIDs (HomoloGene IDs used by HomoloGene to
represent sequences represented by the LocusLink ids). This
environment allows users to map LocusLink ids to HGIDs and then use
the obtained HGIDs to locat homologous genes in other organisms using
the environment that contains data for homologous genes found in other
organisms using \Robject(homologyDATA).


\subsection{Use \Rpackage{homology} to explore homologous
  relationships among organisms}

\subsubsection{Task 1}

Given LocusLink id 25 in human, how to find all other species
containing homologous genes of best best matches with percent
similarity values above 80.00?

First we call a function \Rfunction{LL2homology} in
\Rpackage{annotate} to obtain data for all the homologous genes of
LocusLink id 25.

<<>>=
homoGenes <- LL2homology("25")
@

\Robject{homoGenes} is a list of \Rclass{homoData} objects. We are
only interested in genes that are best best matches (homoType = B) to
LocusLink id 25 with percent identity values greater than 80.00. The
following code finds and prints the names of the organisms and
LocusLink IDs and HGIDs for genes that satisfy the conditions:

<<>>=
# A given LocusLink id may be mapped to more than one HGID. Use the
# data for the first one here
goodG <- sapply(homoGenes[[1]], function(x){
    (homoType(x) == "B" && homoPS(x) > 80.00)})

geneList <- homoGenes[[1]][goodG]
sapply(geneList, function(x) homoOrg(x))
sapply(geneList, function(x) homoLL(x))
sapply(geneList, function(x) homoHGID(x))
@

\subsubsection{Task 2}

Find all the genes in \texttt{Xenopus laevis} that are homologous to
genes of \texttt{Danio rerio} with percent identity values greater
than 90.00.

The organism code for \texttt{Xenopus laevis} is:

<<>>=
homologyORGCODE["Xenopus laevis"]
@

The object containing homology data for \texttt{Xenopus laevis}
is \Robject{homology8355}, which is a vector of HGIDs. Genes in
\texttt{Xenopus laevis} that satisfy the conditions can be obtained
using the following code chunk.

<<>>=
temp <- mget(homology8355, homologyDATA)
tempFun <- function(x){
   for(i in x){
       if(!is.na(homoOrg(i)) && homoOrg(i) == "Danio rerio"
                                           && homoPS(i) > 90.00){
           return(i)
       }
   }
   return(NA)
}
goodGenes <- sapply(temp, tempFun)
goodGenes <- goodGenes[!is.na(goodGenes)]
@

\Robject{goodGenes} obtained above is a list of \Robject(homoData)
objects. The names of the list are the HGIDs for genes in
\texttt{Xenopus laevis} and the corresponding \Robject(homoData)
objects contain information about the homologous genes in
\texttt{"Danio rerio"}. The following code chunk gets the HGIDs and
percent similarity of these homologous genes:

<<>>=
    # Get the HGIDs
    hgids <- unlist(sapply(goodGenes, homoHGID))
    # Get the percent similarities
    ps <- unlist(sapply(goodGenes, homoPS))
@

\subsubsection{Task 3}

For all Affymetrix Danio rerio probe-set IDs, find the
Affymetrix Xenopus laevis probe-set ID of the homologous
gene.

Below is example code to accomplish this task. The code looks up
homologies and Affymetrix probe-set IDs using GenBank accession
numbers. More homologies can be found by also using Locus Link IDs,
but we did not put code for that in the example in order to limit the
complexity of the example code. The code below takes tens of minutes
to run.

The overall goal of all the code in this subsection is to set
\texttt{homoloProbeSets} to be a matrix with Affymetrix Denio rerio
probe-set IDs in the first column and the Affymetrix Xenopus laevis
probe-set ID of the corresponding homologous gene in the second
column.

<<>>=
#
#  Set homoloProbeSets to be a matrix with Affy zebrafish probe-set IDs
#  in the first column and the Affy xenopuslaevis probe-set ID of the
#  corresponding homologous gene in the second column.
#

library(Biobase)
library(zebrafish)                      # Danio rerio
library(xenopuslaevis)                  # Xenopus laevis
@

The function \Rfunction{swapKeyVal} returns an environment with keywords
and values of the input environment swapped.

<<>>=
swapKeyVal <- function(inputEnvironment) {
  tmp <- as.list(inputEnvironment)
  vals <- as.list(names(tmp))
  names(vals) <- tmp
  l2e(vals)
}
@

The line below set \texttt{psids.Xl} to be an environment that maps
Xenopus laevis GenBank IDs to Affymetrix xenopus probe-set IDs

<<>>=
psids.Xl <- swapKeyVal(xenopuslaevisACCNUM)
@

The line below sets \texttt{psids.Dr} to be a list of the Affymetrix
zebrafish probe-set IDs

<<>>=
#psids.Dr <- names(as.list(zebrafishACCNUM))
psids.Dr <- ls(zebrafishACCNUM)
@

The next two lines set \Robject{homoloProbeSets} to be an empty matrix
with one column for each species.

<<>>=
homoloProbeSets <- matrix(character(0), nrow=0, ncol=2)
colnames(homoloProbeSets) <- c('zebrafish', 'xenopuslaevis')
@

For each Danio rerio probe-set ID, we look for the homologous Xenopus
laevis probe-set ID. (The use of \Rfunction{sub()} below is to chop off
extensions to GenBank IDs that indicate version number because those
extensions are not in \Robject{xenopuslaevisACCNUM}.)

<<>>=
for (psid.Dr in psids.Dr) {

  listOfLists <- ACC2homology(zebrafishACCNUM[[psid.Dr]])
  targetHomoGene <- NULL

  for (homoGeneList in listOfLists) {
    for (homoGene in homoGeneList) {
      if (homoOrg(homoGene) == 'Xenopus laevis') {
        targetHomoGene <- homoGene
        break
      }
    }
  }

  if (!is.null(targetHomoGene)) {
    # The GenBank IDs in xenopuslaevisACCNUM do not have extensions that
    # indicate version number, so we chop off the extensions.
    acc <- sub('\\.[0-9]+$', '', homoACC(targetHomoGene))
    psid.Xl <- psids.Xl[[acc]]
    if (!is.null(psid.Xl)) {
      homoloProbeSets <- rbind(homoloProbeSets, c(psid.Dr, psid.Xl))
    }
  }
}
@

Now let's see how many homologies we found and look at the first ten.

<<>>=
print(dim(homoloProbeSets))
print(homoloProbeSets[1:10,])
@


\end{document}


