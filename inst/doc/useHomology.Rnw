% \VignetteIndexEntry{Using the homology package}
% \VignetteDepends{annotate(>= 1.4.2, homology(>= 1.6.0}
% \VignetteKeywords{Annotation}
%\VignettePackage{annotate}

\documentclass{article}

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}

\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}

\usepackage{hyperref}

\usepackage[authoryear,round]{natbib}
\usepackage{times}

\begin{document}
\title{How to use the \Rpackage{homology} package}

\author{Jianhua Zhang}
\date{}
\maketitle

\section*{Introduction}

The \Rpackage{homology} package is built based on a source
data file provided by HomoloGene
(\url{http://www.ncbi.nlm.nih.gov/HomoloGene/}).
This vignette illustrates how to use the \Rpackage{homology} package
to explore the homologous relationships among organisms. Two or more
organisms have homologous relationships if their genes share an
arbitrary threshold level of similarity determined by alignment of
matching bases.

This vignette demonstrates the usage of the \Rpackage{homology}
package by performing two tasks to introduce users to the
package, although the potential use of the package is well beyond the
scope of the tasks.

\section*{Contents of the package}

As other Bioconductor data packages, the \Rpackage{homology} package
contains environment objects in the \texttt{data} subdirectory that
will be loaded when the package is loaded. A full list of the
environment objects is shown below (based on version
\Sexpr{packageDescription("homology")$Version} of \Rpackage{homology}):

<<>>=
library("annotate")
library("homology")
homology()
@

Each environment object contains data for homologous genes found in
other organisms that have shown homologous relationships with the organism
specified by the organism code (used by NCBI for organism) following the
\texttt{homology} portion of the name for the environment. For example,
\Robject{homology9606} relates human genes to genes in other
organisms. Organism codes
and the corresponding scientific names of organisms can be accessed
using the \Robject{homologyORGCODE} and are shown below:

<<>>=
homologyORGCODE
@

Environments with an organism code component in their names have
HomologGeneIDs as keys and lists of \Rclass{homoData} objects for other
organisms that have been identified to have homology relationships as
the corresponding values. The list for a given HomologGene ID may have
one or more \Rclass{homoData} objects depending on whether homology
relationships have been identified in only one or more other organisms.

A \Rclass{homoData} object has slots for the name of the organism
(homoOrg), LocusLink ID (homoLL), HomologGeneID (homoHGID), GenBank
accession number (homoACC) of the best matching sequence, type of
similarity (homoType. B - reciprocal best best between three or more
organisms, b
- reciprocal best match between two organisms, and c - curated
homology relationship between two organisms), percent of identity
(homoPS) measured as the percentage of base pair alignment between the
matching sequences, and a url (homoURL) to the source if the
relationship is a curated orthology. The homoData objects with
homoType = B or b will not have any value for homoURL and objects with
homoType = c will not have any value for homoPS.

The \Robject{homologyLL2HGID} environment contains mappings between
LocusLink identifiers and HGIDs (HomoloGene IDs used by HomoloGene to
represent sequences). This environment allows users to map
LocusLink ids to HGIDs and then use the obtained HGIDs to locat homologous
genes in other organisms using the environment that contains data for
homologous genes found in other organisms.



\subsection{Use \Rpackage{homology} to explore homologous
  relationships among organisms}

\subsubsection{Task 1}

Given LocusLink id 13797 in human, how to find all other species
containing homologous genes of best best matches with percent
similarity values above 80.00?

First, we need to know which environment contains the data we
need by finding out the organism code for humans.

<<>> =
homologyORGCODE["Homo sapiens"]
@

%%FIXME: 13797 is a mouse locus link id....
Now we start with the LocusLink ID 13797 and look for homologous
genes. Note that this is a mouse gene and so we need to start with the
mouse mappings (Mus musculus).

<<>>=
homoGenes <- homology9606[[as.character(homologyLL2HGID[["13797"]])]]
@

\Robject{homoGenes} is a list of \Rclass{homoData} objects. We are only
interested in genes that are best best matches (homoType = B) to
LocusLink id 13797 with percent identity values greater than
80.00. The following code filters out those genes:

<<>>=
goodG = sapply(homoGenes, function(x) {
        if(homoType(x) == "B" && homoPS(x) > 80.00)
            TRUE
        else
            FALSE})

geneList = homoGenes[goodG]
@

The names of the organisms and LocusLink IDs and HGIDs for genes that
satisfy the conditions are:

<<>>=
sapply(geneList, function(x) homoOrg(x))
sapply(geneList, function(x) homoLL(x))
sapply(geneList, function(x) homoHGID(x))
@

\subsubsection{Task 2}

Find all the genes in \texttt{Xenopus laevis} that are homologous to
genes of \texttt{Danio rerio} with percent identity (homoType = B or
b) values greater than 90.00.

The organism code for \texttt{Xenopus laevis} is:

<<>>=
homologyORGCODE["Xenopus laevis"]
@

Genes in \texttt{Xenopus laevis} that satisfy the conditions are:
%%FIXME: don't see how the homoType gets used in this next code chunk

<<>>=
temp <- as.list(homology8355)
tempFun <- function(x){
   found <- NULL
   for(i in x){
       if(!is.na(homoOrg(i)) && homoOrg(i) == "Danio rerio"
                                           && homoPS(i) > 90.00){
           found <- homoLL(i)
       }
   }
   return(found)
}
goodGenes <- unlist(sapply(temp, tempFun))
goodGenes <- goodGenes[!is.na(goodGenes)]
@

%%FIXME: is this such a good idea? I think that only a few of the
%%danio rerio genes will have LocusLink IDs; it will probably be
%%better to use ACC - or perhaps HGIDs?
\Robject{goodGenes} obtained above is a named vector with names being
the HGIDs for genes in \texttt{Xenopus laevis} and values being the
LocusLink ids for the homologous genes in \texttt{"Danio rerio"}. We
would like to have a matrix with the LocusLink ids for genes in
\texttt{Xenopus laevis} in one column and the LocusLink ids for
homologous genes in \texttt{"Danio rerio"} in another column. The
following code does that:

<<>>=
geneMat <- matrix(ncol = 2, nrow = 0)
ll2HGID <- as.list(homologyLL2HGID)
ll2HGID <- ll2HGID[!is.na(ll2HGID)]
for(i in names(goodGenes)){
    # HGIDs may be mapped to none, one, or more than one LocusLink ids
    llIds <- ll2HGID[ll2HGID == as.numeric(i)]
    if(length(llIds) == 0){
        geneMat <- rbind(geneMat, c(NA, as.vector(goodGenes[i])))
    }else{
        geneMat <- rbind(geneMat, cbind(names(ll2HGID
                    [ll2HGID == as.numeric(i)]), as.vector(goodGenes[i])))
    }
}
geneMat
@

In the above example, HGID 633415 is mapped to two LocusLink IDs, HGID
633558 and 633837 are not mapped to any LocusLink IDs, and HGID 633826
is mapped to one LocusLink ID for \texttt{Xenopus laevis}.

\end{document}







